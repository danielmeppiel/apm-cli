name: Build and Release Binaries

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_build:
        description: 'Test build (uploads as workflow artifacts instead of release assets)'
        required: false
        default: true
        type: boolean

jobs:
  build:
    name: Build AWD Binary
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            platform: linux
            arch: x86_64
            binary_name: awd-linux-x86_64
          - os: macos-latest
            platform: darwin
            arch: x86_64
            binary_name: awd-darwin-x86_64
          - os: macos-latest
            platform: darwin
            arch: arm64
            binary_name: awd-darwin-arm64
            target_arch: arm64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Use 3.11 for better compatibility
      
      - name: Install UPX (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y upx-ucl
      
      - name: Install UPX (macOS)
        if: matrix.platform == 'darwin'
        run: |
          brew install upx
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pyinstaller
      
      - name: Build binary (macOS ARM64)
        if: matrix.target_arch == 'arm64'
        run: |
          # Set target architecture for ARM64 build
          export ARCHFLAGS="-arch arm64"
          pyinstaller --target-arch universal2 build/awd.spec
          mv dist/awd dist/${{ matrix.binary_name }}
          chmod +x dist/${{ matrix.binary_name }}
      
      - name: Build binary (Other platforms)
        if: matrix.target_arch != 'arm64'
        run: |
          ./scripts/build-binary.sh
      
      - name: Test binary
        run: |
          ./dist/${{ matrix.binary_name }} --version
      
      - name: Generate checksum
        run: |
          if command -v sha256sum &> /dev/null; then
            sha256sum dist/${{ matrix.binary_name }} > dist/${{ matrix.binary_name }}.sha256
          else
            shasum -a 256 dist/${{ matrix.binary_name }} > dist/${{ matrix.binary_name }}.sha256
          fi
      
      - name: Upload binary to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.binary_name }}
          asset_name: ${{ matrix.binary_name }}
          asset_content_type: application/octet-stream
      
      - name: Upload checksum to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.binary_name }}.sha256
          asset_name: ${{ matrix.binary_name }}.sha256
          asset_content_type: text/plain
      
      - name: Upload binary as workflow artifact (test mode)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: |
            ./dist/${{ matrix.binary_name }}
            ./dist/${{ matrix.binary_name }}.sha256
          retention-days: 30
